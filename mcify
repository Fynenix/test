local basalt = require("basalt") --> Load the Basalt framework into the variable called "basalt"

--> Now we want to create a base frame, we call the variable "main" - by default everything you create is visible. (you don't need to use :show())


local main = basalt.createFrame()
local playsongthread = main:addThread()
local aDropdown = main:addDropdown()
aDropdown:addItem("Item 1")
aDropdown:addItem("Bundy")
aDropdown:addItem("Item 3")

aDropdown:onChange(function(self, item)
  local song = aDropdown:getItemIndex()
  if(song == 1)then
    songname = "Bundy.wav"
  end
end)

local play = main:addFrame() -- the frame we want to resize
    :setPosition(3,3)
    :setSize(8,8)
    :setBorder(colors.black)

local stop = main:addFrame() -- the frame we want to resize
    :setPosition(3,20)
    :setSize(8,8)
    :setBorder(colors.black)

play:addButton()
    :setPosition(1, 1)
    :setText("Play")
    :setSize(1,1)
    :onClick(
      function()
          playsongthread:start(playmusic)
      end)

stop:addButton()
    :setPosition(1, 10)
    :setText("Stop")
    :setSize(1,1)
    :onClick(
      function()
          playsongthread:stop(playmusic)
      end)

function playmusic(music)
  local dfpwm = require("cc.audio.dfpwm")
  local speaker = peripheral.find("speaker")

  local decoder = dfpwm.make_decoder()
  for chunk in io.lines(songname, 16 * 1024) do
      local buffer = decoder(chunk)

      while not speaker.playAudio(buffer) do
          os.pullEvent("speaker_audio_empty")
      end
  end
end

basalt.autoUpdate()
